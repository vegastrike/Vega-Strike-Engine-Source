name: 'GH Actions - Release'

on:
  release:
    types:
      - created
      - edited

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    continue-on-error: true

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - FROM:     'ubuntu:noble'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            ARTIFACT_EXT: 'deb'
          # Source tarballs only
          - FROM:     'ubuntu:noble'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            ARTIFACT_EXT: 'tar.[xb]z*'
          - FROM:     'linuxmintd/mint22-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            ARTIFACT_EXT: 'deb'
          - FROM:     'debian:bookworm'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            ARTIFACT_EXT: 'deb'
          - FROM:     'fedora:41'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'ON'
            ARTIFACT_EXT: 'rpm'
          - FROM:     'fedora:40'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'ON'
            ARTIFACT_EXT: 'rpm'

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
          submodules: false

      - name: Extract tag name and short SHA
        shell: bash
        run: |
          echo "TAG_NAME=$(echo ${GITHUB_REF#refs/tags/} | sed 's/\//_/g')" >> $GITHUB_ENV
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
      - name: Test tag name and short SHA
        run: |
          echo "${TAG_NAME}"
          echo "${SHORT_SHA}"
      - name: Run CI
        env:
          FROM:       ${{ matrix.FROM }}
          COMPILER:   ${{ matrix.COMPILER }}
          FLAGS:      '-DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }} -DENABLE_PIE=${{ matrix.ENABLE_PIE }}'
          MY_OS_NAME: linux
          IS_RELEASE: 1
        run: script/cibuild $FLAGS
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@44887b225ceca96efd8a912d39c09ad70312af31 # master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_EXT: ${{ matrix.ARTIFACT_EXT }}
        with:
          args: "packages/*.${{ matrix.ARTIFACT_EXT }}"
