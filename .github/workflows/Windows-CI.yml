# This is a basic workflow to help you get started with Actions

name: Windows-CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os:              windows-2019
            cmake-generator: VS2019Win64
            enable-pie:      1
            build-type:      Release
          - os:              windows-2022
            cmake-generator: VS2022Win64
            enable-pie:      1
            build-type:      Debug

    env:
      buildDir: '${{ github.workspace }}/build/'
      # Indicates the location of vcpkg
      VCPKG_ROOT: '${{ github.workspace }}/v'
      # Tells vcpkg where binary packages are stored.
      VCPKG_DEFAULT_BINARY_CACHE: '${{ github.workspace }}/vbincache'
      ## Let's use GitHub Action cache as storage for the vcpkg Binary Caching feature.
      #VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'
      VCPKG_DEFAULT_TRIPLET: x64-windows
      VCPKG_DEFAULT_HOST_TRIPLET: x64-windows
      #PYTHONHOME: '${{ github.workspace }}/v/packages/python3_x64-windows/tools/python3'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set env vars needed for vcpkg to leverage the GitHub Action cache as a storage
      # for Binary Caching.
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 #v6.4.1
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 #v4.7.1
        with:
          python-version: '3.11.5'
          check-latest: true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
        shell: bash

      - name: install-cmake
        uses: lukka/get-cmake@4865386b66955d11be0abf8c112d0230023e742a #v3.27.9
        with:
          cmakeVersion: 3.27.9
          ninjaVersion: 1.11.1

      #      # Restore vcpkg from the GitHub Action cache service. Note that packages are restored by vcpkg's binary caching
      #      # when it is being run afterward by CMake.
      #      - name: restore-vcpkg
      #        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
      #        with:
      #          # The first path is the location of vcpkg: it contains the vcpkg executable and data files, as long as the
      #          # built package archives (aka binary cache) which are located by VCPKG_DEFAULT_BINARY_CACHE env var.
      #          # The other paths starting with '!' are exclusions: they contain temporary files generated during the build of the installed packages.
      #          path: |
      #            ${{ env.VCPKG_ROOT }}
      #            !${{ env.VCPKG_ROOT }}/buildtrees
      #            !${{ env.VCPKG_ROOT }}/packages
      #            !${{ env.VCPKG_ROOT }}/downloads
      #            !${{ env.VCPKG_ROOT }}/installed
      #          # The key is composed in a way that it gets properly invalidated whenever a different version of vcpkg is being used.
      #          key: |
      #            ${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}

      - name: install-vcpkg
        #if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/vegastrike/vcpkg-local.git ${{ env.VCPKG_ROOT }}
          ${{ env.VCPKG_ROOT }}\bootstrap-vcpkg.bat -disableMetrics

      - name: run-build-script
        working-directory: ${{ github.workspace }}
        run: .\script\build.ps1 -Generator ${{ matrix.cmake-generator }} -EnablePIE ${{ matrix.enable-pie }} -BuildType ${{ matrix.build-type }}
