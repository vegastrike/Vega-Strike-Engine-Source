name: 'GH Actions - PR'

on: [ pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    continue-on-error: ${{ matrix.allow_failure }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - FROM:     'ubuntu:noble'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'LEGACY'
            ENABLE_PIE: 'OFF'
            allow_failure: true
          - FROM:     'ubuntu:noble'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
            ENABLE_PIE: 'OFF'
            allow_failure: true
          - FROM:     'ubuntu:noble'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            allow_failure: true
          - FROM:     'ubuntu:noble'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            allow_failure: true
          - FROM:     'linuxmintd/mint22-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            allow_failure: true
          - FROM:     'debian:bookworm'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'OFF'
            allow_failure: false
          - FROM:     'fedora:39'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
            ENABLE_PIE: 'ON'
            allow_failure: true
          - FROM:     'fedora:39'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'ON'
            allow_failure: true
          - FROM:     'fedora:40'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
            ENABLE_PIE: 'ON'
            allow_failure: true
          - FROM:     'fedora:40'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
            ENABLE_PIE: 'ON'
            allow_failure: false
            # Removing rockylinux due to https://github.com/boostorg/mpl/issues/69
            # TODO: add newer rocklinux (9.5?) when it comes out
          # - FROM:     'rockylinux_rockylinux:9.4'
          #   COMPILER: 'clang'
          #   OpenGL_GL_PREFERENCE: 'GLVND'
          #   ENABLE_PIE: 'ON'
          #   allow_failure: false
          # Disabled until the build can be fixed
          #- FROM:     'rockylinux_rockylinux:8.10'
          #  COMPILER: 'clang'
          #  OpenGL_GL_PREFERENCE: 'GLVND'
          #  ENABLE_PIE: 'ON'
          #  allow_failure: false
          #- FROM:     'manjarolinux/base'
          #  COMPILER: 'clang'
          #  OpenGL_GL_PREFERENCE: 'LEGACY'
          #  ENABLE_PIE: 'ON'
          #  allow_failure: true
          #- FROM:     'manjarolinux/base'
          #  COMPILER: 'clang'
          #  OpenGL_GL_PREFERENCE: 'GLVND'
          #  ENABLE_PIE: 'ON'
          #  allow_failure: true
          #- FROM:     'funtoo/stage3-generic_64'
          #  COMPILER: 'gcc'
          #  OpenGL_GL_PREFERENCE: 'LEGACY'
          #  ENABLE_PIE: 'ON'
          #  allow_failure: true
          #- FROM:     'funtoo/stage3-generic_64'
          #  COMPILER: 'gcc'
          #  OpenGL_GL_PREFERENCE: 'GLVND'
          #  ENABLE_PIE: 'ON'
          #  allow_failure: true

    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          fetch-depth: 2
          submodules: false

      # Ensure PRs are built against the PR Head
      # As opposed to the merge commit
      - name: Move to PR HEAD
        run: git checkout ${{ github.event.pull_request.head.sha }}

      - name: Extract short SHA
        shell: bash
        run: |
          echo "SHORT_SHA=`git rev-parse --short ${{ github.event.pull_request.head.sha }}`" >> $GITHUB_ENV
      - name: Test short SHA
        run: |
          echo "${SHORT_SHA}"

      - name: Execute bootstrap
        run:  sudo script/bootstrap

      - name: Build and Test
        env:
          FROM:       ${{ matrix.FROM }}
          COMPILER:   ${{ matrix.COMPILER }}
          FLAGS:      '-DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }} -DENABLE_PIE=${{ matrix.ENABLE_PIE }}'
          MY_OS_NAME: linux
          IS_RELEASE: 0
        run: script/cibuild $FLAGS

      # This is run from inside the Docker container, by script/docker-entrypoint.sh
      # - name: Test
      #   working-directory: ${{github.workspace}}/build
      #   env:
      #     GTEST_OUTPUT: xml
      #     GTEST_COLOR: 1
      #   run: ctest -V

      - name: Upload test results
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 #v3.1.3
        if: failure()
        with:
          name: test_results_xml
          path: ${{github.workspace}}/test-results/**/*.xml
